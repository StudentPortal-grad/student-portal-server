{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-a1b2-c3d4-e5f6a1b2c3d4",
		"name": "Student Portal - Notifications API v2",
		"description": "A comprehensive collection of API requests for interacting with the Student Portal's notification and FCM system. This collection covers token management, notification retrieval, and state management.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FCM Management",
			"description": "Endpoints for managing user device FCM tokens and topic subscriptions.",
			"item": [
				{
					"name": "Update FCM Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fcmToken\": \"your_device_fcm_token_here\",\n    \"platform\": \"mobile\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fcm/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fcm",
								"token"
							]
						},
						"description": "Updates or registers a device's FCM token for the authenticated user to enable push notifications. This should be called on app startup and whenever the token is refreshed."
					},
					"response": []
				},
				{
					"name": "Remove FCM Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fcm/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fcm",
								"token"
							]
						},
						"description": "Removes a device's FCM token, typically on user logout, to stop push notifications to that specific device."
					},
					"response": []
				},
				{
					"name": "Get FCM Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fcm/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fcm",
								"status"
							]
						},
						"description": "Checks if the user's FCM token is registered and active."
					},
					"response": []
				},
				{
					"name": "Subscribe to Topic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"topic\": \"your_topic_name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fcm/subscribe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fcm",
								"subscribe"
							]
						},
						"description": "Subscribes the user's device to a specific FCM topic (e.g., 'new_events')."
					},
					"response": []
				},
				{
					"name": "Unsubscribe from Topic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"topic\": \"your_topic_name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fcm/unsubscribe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fcm",
								"unsubscribe"
							]
						},
						"description": "Unsubscribes the user's device from a specific FCM topic."
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get User Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notifications?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notifications"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Retrieves a paginated list of notifications for the authenticated user. The response also includes the total unread notification count."
					},
					"response": []
				},
				{
					"name": "Mark Notification as Read",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/685635d16783d90a0933fced/read",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"685635d16783d90a0933fced",
								"read"
							]
						},
						"description": "Marks a single notification as read."
					},
					"response": [
						{
							"name": "Mark Notification as Read",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/685635d16783d90a0933fced/read",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"685635d16783d90a0933fced",
										"read"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9994"
								},
								{
									"key": "Date",
									"value": "Sat, 21 Jun 2025 22:31:12 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1750548554"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "120"
								},
								{
									"key": "ETag",
									"value": "W/\"78-oW7ncjtlAevI9tvgnvuYvotqm/8\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Notification marked as read\",\n    \"data\": null,\n    \"metadata\": {\n        \"timestamp\": \"2025-06-21T22:31:12.356Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Mark All Notifications as Read",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/read-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"read-all"
							]
						},
						"description": "Marks all of the user's unread notifications as read."
					},
					"response": [
						{
							"name": "Mark All Notifications as Read",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/read-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"read-all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10000"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9992"
								},
								{
									"key": "Date",
									"value": "Sat, 21 Jun 2025 22:31:38 GMT"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1750548554"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "ETag",
									"value": "W/\"7d-DlGX7mLY23bqRskVjS4z3+bpGqc\""
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"All notifications marked as read\",\n    \"data\": null,\n    \"metadata\": {\n        \"timestamp\": \"2025-06-21T22:31:38.528Z\"\n    }\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "your_jwt_auth_token",
			"type": "string"
		}
	]
}